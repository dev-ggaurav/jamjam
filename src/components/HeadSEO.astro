---
import '@/styles/globals.css'
import '@/styles/fonts.css'
import { SITE_TITLE, SITE_DESCRIPTION } from '../constants'
import { ViewTransitions } from 'astro:transitions'

interface Props {
  title?: string | undefined
  description?: string | undefined
  ogImage?: URL | undefined
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

if (Astro.props.ogImage === undefined) {
  Astro.props.ogImage = new URL('og-image.png', canonicalURL)
}

const { title, description, ogImage } = Astro.props
---

<meta charset="utf-8" />
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />
<link
  rel="shortcut icon"
  type="image/svg+xml"
  href={`${Astro.site}favicon.svg`}
/>
<title>{SITE_TITLE} - {title}</title>
<meta name="title" content={title} />
<meta name="description" content={SITE_DESCRIPTION} />

<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImage} />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImage} />

<link
  rel="preload"
  href="/fonts/calsans-semibold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<script is:inline>
  const setDarkMode = () => {
    const theme = (() => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme')
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark'
      }
      return 'light'
    })()

    if (theme === 'light') {
      document.documentElement.classList.remove('dark')
    } else {
      document.documentElement.classList.add('dark')
    }
    window.localStorage.setItem('theme', theme)
  }

  setDarkMode()
  document.addEventListener('astro:after-swap', setDarkMode)
</script>

<ViewTransitions />
