---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import Pagination from '../../components/Pagination.astro'
import { ARTICLES_PER_PAGE } from '../../constants'
import ArticleCard from '../../components/ArticleCard.astro'
import BlogHeader from '../../components/BlogHeader.astro'

const currentPage: number | null = +Astro.url.searchParams.get('page')! || 1

const allBlogArticles: CollectionEntry<'blog'>[] = (
  await getCollection('blog')
).sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
)

const totalPages: number = Math.ceil(allBlogArticles.length / ARTICLES_PER_PAGE)

const articleForPage: CollectionEntry<'blog'>[] = allBlogArticles.slice(
  (currentPage - 1) * ARTICLES_PER_PAGE,
  currentPage * ARTICLES_PER_PAGE,
)
---

<BaseLayout title="Blog">
  <BlogHeader />
  <div
    class="mb-10 grid gap-x-8 gap-y-12 sm:grid-cols-2 lg:mb-14 lg:grid-cols-3"
  >
    {articleForPage.map((article) => <ArticleCard article={article} />)}
  </div>
  <Pagination
    currentPage={currentPage}
    totalPages={totalPages}
    disablePrev={currentPage === 1}
    disableNext={currentPage === totalPages}
  />
</BaseLayout>
